[{"/Users/admin/repos/taskr2/src/reportWebVitals.js":"1","/Users/admin/repos/taskr2/src/TaskrItem.js":"2","/Users/admin/repos/taskr2/src/App.js":"3","/Users/admin/repos/taskr2/src/models/DefaultModel.js":"4","/Users/admin/repos/taskr2/src/Swimlane.js":"5","/Users/admin/repos/taskr2/src/models/TaskrItem.js":"6","/Users/admin/repos/taskr2/src/SwimlaneContainer.js":"7","/Users/admin/repos/taskr2/src/ItemTypes.js":"8","/Users/admin/repos/taskr2/src/models/DefaultCollection.js":"9","/Users/admin/repos/taskr2/src/index.js":"10","/Users/admin/repos/taskr2/src/List.js":"11","/Users/admin/repos/taskr2/src/ListItem.js":"12","/Users/admin/repos/taskr2/src/getData.js":"13"},{"size":362,"mtime":1606368757601,"results":"14","hashOfConfig":"15"},{"size":870,"mtime":1606510492045,"results":"16","hashOfConfig":"15"},{"size":2513,"mtime":1606538469987,"results":"17","hashOfConfig":"15"},{"size":304,"mtime":1606439951395,"results":"18","hashOfConfig":"15"},{"size":1300,"mtime":1606526583988,"results":"19","hashOfConfig":"15"},{"size":440,"mtime":1606369809877,"results":"20","hashOfConfig":"15"},{"size":1237,"mtime":1606510615997,"results":"21","hashOfConfig":"15"},{"size":45,"mtime":1606406877597,"results":"22","hashOfConfig":"15"},{"size":1368,"mtime":1606508863652,"results":"23","hashOfConfig":"15"},{"size":208,"mtime":1606538343780,"results":"24","hashOfConfig":"15"},{"size":845,"mtime":1606538386826,"results":"25","hashOfConfig":"15"},{"size":575,"mtime":1606530324630,"results":"26","hashOfConfig":"15"},{"size":636,"mtime":1606536545265,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"28gglr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/repos/taskr2/src/reportWebVitals.js",[],["58","59"],"/Users/admin/repos/taskr2/src/TaskrItem.js",[],"/Users/admin/repos/taskr2/src/App.js",["60"],"import React, { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport getData from \"./getData\";\nimport List from \"./List\";\n\nconst columns = getData(2);\nconst data = {\n    columns: {}\n}\nfor (let i = 0; i < columns.length; i++) {\n    data.columns[i] = columns[i];\n}\n\nexport default function App() {\n    const [appData, setData] = useState(data);\n    const onDragEnd = result => {\n\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\n            return;\n        }\n\n        const start = appData.columns[source.droppableId];\n        const finish = appData.columns[destination.droppableId];\n\n        if (start === finish) {\n            const newTaskIds = Array.from(start.items);\n            let [removedItem] = newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, removedItem);\n\n            const newColumn = {\n                ...finish,\n                items: newTaskIds,\n            };\n\n            const newState = {\n                ...appData,\n                columns: {\n                    ...appData.columns,\n                    [newColumn.id]: newColumn,\n                },\n            };\n\n            setData(newState);\n            return;\n        }\n\n        // Moving from one list to another\n        const startTaskIds = Array.from(start.items);\n        let [removedItem] = startTaskIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            items: startTaskIds,\n        };\n\n        const finishTaskIds = Array.from(finish.items);\n        finishTaskIds.splice(destination.index, 0, removedItem);\n        const newFinish = {\n            ...finish,\n            items: finishTaskIds,\n        };\n\n        const newState = {\n            ...appData,\n            columns: {\n                ...appData.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        };\n        setData(newState);\n    };\n    return (\n        <div className=\"App\">\n            <h1>You can drag & drop items in the below list</h1>\n            <div className=\"Swimlanes\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <List data={appData.columns[0]} />\n                    <List data={appData.columns[1]} />\n                </DragDropContext>\n            </div>\n\n        </div>\n    );\n}","/Users/admin/repos/taskr2/src/models/DefaultModel.js",[],["61","62"],"/Users/admin/repos/taskr2/src/Swimlane.js",["63","64"],"/Users/admin/repos/taskr2/src/models/TaskrItem.js",[],["65","66"],"/Users/admin/repos/taskr2/src/SwimlaneContainer.js",["67"],"/Users/admin/repos/taskr2/src/ItemTypes.js",[],"/Users/admin/repos/taskr2/src/models/DefaultCollection.js",[],"/Users/admin/repos/taskr2/src/index.js",[],"/Users/admin/repos/taskr2/src/List.js",[],"/Users/admin/repos/taskr2/src/ListItem.js",[],"/Users/admin/repos/taskr2/src/getData.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":18,"column":38,"nodeType":"74","messageId":"75","endLine":18,"endColumn":49},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":3,"column":21,"nodeType":"74","messageId":"75","endLine":3,"endColumn":30},{"ruleId":"72","severity":1,"message":"79","line":3,"column":32,"nodeType":"74","messageId":"75","endLine":3,"endColumn":47},{"ruleId":"68","replacedBy":"80"},{"ruleId":"70","replacedBy":"81"},{"ruleId":"72","severity":1,"message":"73","line":15,"column":38,"nodeType":"74","messageId":"75","endLine":15,"endColumn":49},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar",["82"],["83"],"'Draggable' is defined but never used.","'DragDropContext' is defined but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]